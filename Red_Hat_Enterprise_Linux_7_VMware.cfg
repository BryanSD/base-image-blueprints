#%pre --log=/tmp/log
##!/bin/bash
#dd if=/dev/zero of=/dev/sda bs=512 count=1
#parted -s /dev/sda mklabel gpt
#partprobe
#%end

# Install, not upgrade
install
cmdline

# Install from a friendly mirror and add updates
#url --url=http://intra.mirror.rackspace.com/kickstart/rhel-x86_64-server-7
cdrom
repo --name=base --baseurl=http://intra.mirror.rackspace.com/kickstart/rhel-x86_64-server-7/
repo --name=optional --baseurl=http://intra.mirror.rackspace.com/kickstart/rhel-x86_64-server-optional-7/
repo --name=epel --baseurl=http://mirror.rackspace.com/epel/7/x86_64/

# Language and keyboard setup
lang en_US.UTF-8
keyboard us

# Configure DHCP networking w/optional IPv6, firewall on
network --onboot yes --device eth0 --bootproto dhcp --ipv6 auto --hostname localhost
firewall --service=ssh

# Set timezone
timezone --utc Etc/UTC

# Authentication
# password expires after first login
rootpw --plaintext rackspace
authconfig --enableshadow --passalgo=sha512

# SELinux
selinux --permissive

# Services running at boot
services --enabled network,sshd,rc-local
#,NetworkManager-wait-online
services --disabled sendmail

# Disable anything graphical
skipx
text

# Setup the disk
zerombr
clearpart --all --initlabel
#part biosboot --size=1
part / --fstype=ext4 --grow --size=1024
bootloader --timeout=1 --append="root=/dev/sda1"

# Shutdown when the kickstart is done
shutdown

# Minimal package set
%packages 
@base
# lean install options
#%packages --excludedocs --nobase --ignoremissing
#@core
# leaving the rest below anyway
kernel
rsync
tar
wget
yum-rhn-plugin
rhn-client-tools
rhn-setup
gdisk
curl
iptables-services
ntp
net-snmp
net-snmp-utils
net-tools
sysstat
bind-utils
bc
perl-Crypt-SSLeay
perl-TermReadKey
perl-libwww-perl
cloud-init
cloud-utils
cloud-utils-growpart
open-vm-tools
# all below are required for cloud-init
epel-release
python-devel
python-requests
python-prettytable
python-cheetah
PyYAML
net-tools
qemu-img
policycoreutils-python

%end

%post --nochroot
cat >> /etc/resolv.conf <<'EOF'
nameserver 8.8.8.8
EOF
cp /etc/resolv.conf /mnt/sysimage/etc/resolv.conf
%end

%post --log=/var/log/post_install.log
# setup systemd to boot to the right runlevel
echo -n "Setting default runlevel to multiuser text mode"
rm -f /etc/systemd/system/default.target
ln -s /lib/systemd/system/multi-user.target /etc/systemd/system/default.target

# If you want to remove rsyslog and just use journald, remove this!
echo -n "Disabling persistent journal"
rmdir /var/log/journal/ 

# this is installed by default but we don't need it in virt
echo "Removing linux-firmware package."
yum -C -y remove linux-firmware

# Non-firewalld-firewall
#echo -n "Writing static firewall"
#cat <<EOF > /etc/sysconfig/iptables
# Simple static firewall loaded by iptables.service. Replace
# this with your own custom rules, run lokkit, or switch to 
# shorewall or firewalld as your needs dictate.
#*filter
#:INPUT ACCEPT [0:0]
#:FORWARD ACCEPT [0:0]
#:OUTPUT ACCEPT [0:0]
#-A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
#-A INPUT -p icmp -j ACCEPT
#-A INPUT -i lo -j ACCEPT
#-A INPUT -m conntrack --ctstate NEW -m tcp -p tcp --dport 22 -j ACCEPT
#-A INPUT -j REJECT --reject-with icmp-host-prohibited
#-A FORWARD -j REJECT --reject-with icmp-host-prohibited
#COMMIT
#EOF

echo -n "Getty fixes"
# although we want console output going to the serial console, we don't
# actually have the opportunity to login there. FIX.
# we don't really need to auto-spawn _any_ gettys.
sed -i '/^#NAutoVTs=.*/ a\
NAutoVTs=0' /etc/systemd/logind.conf

echo -n "Network fixes"
# initscripts don't like this file to be missing.
cat > /etc/sysconfig/network << EOF
NETWORKING=yes
NOZEROCONF=yes
EOF

# For cloud images, 'eth0' _is_ the predictable device name, since
# we don't want to be tied to specific virtual (!) hardware
echo -n > /etc/udev/rules.d/70-persistent-net.rules
echo -n > /lib/udev/rules.d/75-persistent-net-generator.rules
ln -s /dev/null /etc/udev/rules.d/80-net-name-slot.rules

# simple eth0 config, again not hard-coded to the build hardware
cat > /etc/sysconfig/network-scripts/ifcfg-eth0 << EOF
DEVICE="eth0"
BOOTPROTO="static"
ONBOOT="yes"
TYPE="Ethernet"
EOF

# generic localhost names
cat > /etc/hosts << EOF
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
EOF

# Because memory is scarce resource in most cloud/virt environments,
# and because this impedes forensics, we are differing from the Fedora
# default of having /tmp on tmpfs.
echo "Disabling tmpfs for /tmp."
/usr/bin/systemctl mask tmp.mount

# tmp tmp
mkdir /tmp/tmp
cd /tmp/tmp

# separate tmp file
#rm -rf /tmp/*
#dd if=/dev/zero of=/etc/TMPFILE.img bs=1 count=1 seek=2147483648
#yes | mkfs.ext4 /etc/TMPFILE.img
#mount -o loop,rw /etc/TMPFILE.img /mnt
#chmod 1777 /mnt
#umount /mnt

# set some stuff
echo 'net.ipv4.conf.eth0.arp_notify = 1' >> /etc/sysctl.conf
echo 'vm.swappiness = 0' >> /etc/sysctl.conf

# use a static fstab
cat > /etc/fstab <<'EOF'
# Accessible filesystems, by reference, are maintained under '/dev/disk'
# See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info
#
/dev/sda1       / ext4 defaults,noatime 1 1
tmpfs /dev/shm tmpfs defaults 0 0
devpts /dev/pts devpts gid=5,mode=620 0 0
sysfs /sys sysfs defaults 0 0
proc /proc proc defaults 0 0
EOF

# set rackspace mirrors
#sed -i 's%#baseurl.*%baseurl=http://mirror.rackspace.com/epel/7/x86_64/%g' /etc/yum.repos.d/epel.repo
#sed -i '/mirrorlist/s/^/#/' /etc/yum.repos.d/epel.repo
#sed -i '/baseurl/s/# *//' /etc/yum.repos.d/epel.repo

#cat >> /etc/yum.repos.d/rhel-source.repo <<'EOF'
#[rhel-source]
#name=Red Hat Enterprise Linux $releasever - $basearch - Source
#baseurl=http://intra.mirror.rackspace.com/kickstart/rhel-x86_64-server-6/
#enabled=1
#gpgcheck=0
#EOF

# custom cloud-init rpm plus deps
#easy_install pip
#pip install --upgrade jsonpatch virtualenv argparse boto requests paste prettytable oauth configobj pylint nose mocker PyYAML Cheetah simplejson pygments
#yum -y install --skip-broken cloud-init cloud-utils cloud-utils-growpart
#wget http://mirror.rackspace.com/epel/7/x86_64/cloud-init-0.7.2-8.el7.noarch.rpm
#wget http://mirror.rackspace.com/epel/7/x86_64/cloud-utils-0.27-10.el7.x86_64.rpm
#wget http://mirror.rackspace.com/epel/7/x86_64/cloud-utils-growpart-0.27-10.el7.x86_64.rpm
#rpm -Uvh --nodeps *.rpm

# our cloud-init config
cat > /etc/cloud/cloud.cfg.d/10_rackspace.cfg <<'EOF'
datasource_list: [ NoCloud, NoCloudNet, None ]
disable_root: False
ssh_pwauth: True
ssh_deletekeys: False
resize_rootfs: noblock
growpart:
  mode: auto
  devices: ['/']
system_info:
  distro: rhel
cloud_config_modules:
 - disk_setup
 - mounts
 - ssh-import-id
 - locale
 - set-passwords
 - package-update-upgrade-install
 - landscape
 - timezone
 - puppet
 - chef
 - salt-minion
 - mcollective
 - disable-ec2-metadata
 - runcmd
 - byobu
EOF

# vmtools
wget --directory-prefix=/tmp/tmp http://packages.vmware.com/tools/keys/VMWARE-PACKAGING-GPG-DSA-KEY.pub
wget --directory-prefix=/tmp/tmp http://packages.vmware.com/tools/keys/VMWARE-PACKAGING-GPG-RSA-KEY.pub
wget --directory-prefix=/tmp/tmp http://packages.vmware.com/tools/esx/5.5/repos/vmware-tools-repo-RHEL6-9.4.0-1.el6.x86_64.rpm
rpm --import /tmp/tmp/VMWARE-PACKAGING-GPG-RSA-KEY.pub
rpm --import /tmp/tmp/VMWARE-PACKAGING-GPG-DSA-KEY.pub
rpm -Uvh /tmp/tmp/vmware-tools*
yum -y --skip-broken install vmware-tools-esx-kmods
yum -y --skip-broken install vmware-tools-esx

# update all
yum -y update

# no soup for you
cat >> /etc/yum.conf <<'EOF'
exclude=kernel*
EOF

# make sure repos are empty for rhel
for k in $(find /etc/yum.repos.d -type f\( ! -name "*epel*" \)); do rm -f $k; done

# force grub to use generic disk labels, bootloader above does not do this
cat >> /etc/sysconfig/grub <<'EOF'
GRUB_DISABLE_LINUX_UUID="true"
EOF
grub2-mkconfig > /boot/grub2/grub.conf

# package need for our RHN registration to work
wget http://dfw.rhn.rackspace.com/pub/rhn-org-trusted-ssl-cert-1.0-1.noarch.rpm
rpm -Uvh rhn-org-trusted-ssl-cert*

# force root pw change
chage -d 0 root

# log packages
wget http://KICK_HOST/kickstarts/package_postback.sh
bash package_postback.sh Red_Hat_Enterprise_Linux_7_VMware

# clean up
yum clean all
truncate -c -s 0 /var/log/yum.log
echo "" > /etc/machine-id
rm -f /root/anaconda-ks.cfg
rm -f /etc/ssh/ssh_host_*
rm -f /etc/resolv.conf
rm -f /root/.bash_history
rm -f /root/.nano_history
rm -f /root/.lesshst
rm -f /root/.ssh/known_hosts
rm -rf /tmp/tmp
for k in $(find /var/log -type f); do echo > $k; done
for k in $(find /tmp -type f); do rm -f $k; done
# watch these lines, causing kick problems
#for k in $(find /root -type f \ ( ! -iname ".*" \)); do rm -f $k; done
%end
