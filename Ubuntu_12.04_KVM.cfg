#System language
lang en_US

#Language modules to install
langsupport en_US

#System keyboard
keyboard us

#System timezone
timezone --utc Etc/UTC

#Root password
rootpw --plaintext lockedinpost

#Initial user
user --disabled

#Do not configure the X Window System
skipx

#Use text mode install
#text

#Install OS instead of upgrade
install

#Use Web installation
url --url=http://mirror.rackspace.com/ubuntu

#System bootloader configuration
bootloader --location=mbr 

#Clear the Master Boot Record
zerombr yes

#Partition clearing information
clearpart --initlabel --all

#Disk partitioning information
part / --fstype ext3 --size=1024 --grow --asprimary 

#System authorization infomation
auth  --useshadow  --enablemd5 

#Firewall configuration
firewall --disabled 


# configs
preseed partman-basicfilesystems/no_swap boolean false
preseed debian-installer/exit/poweroff boolean true
preseed finish-install/reboot_in_progress note
preseed partman/mount_style select traditional
preseed user-setup/allow-password-weak boolean true
preseed cdrom-detect/eject boolean false
#preseed cloud-init/datasources string NoCloud, ConfigDrive

# apt preseeds, note the release versions here
preseed apt-setup/security_host string mirror.rackspace.com
preseed apt-setup/security_path string /ubuntu precise-security
preseed apt-setup/use_mirror boolean true
preseed mirror/protocol string http
preseed mirror/country string manual
preseed mirror/http/hostname string mirror.rackspace.com
preseed mirror/http/directory string /ubuntu
preseed mirror/http/proxy string

# other preseeds to reduce image size
preseed base-installer/install-recommends boolean false
preseed pkgsel/install-language-support boolean false

# packages
%packages
openssh-server
cloud-init
cloud-initramfs-growroot
rsync
tar
wget
parted
curl
python-serial
python-setuptools
resolvconf
bzr
spice-vdagent
python-spice-client-gtk
xserver-xorg-video-qxl
#qemu-kvm
qemu-kvm-spice
gcc
python-pip
python-dev

%post

# update
apt-get update
apt-get -y dist-upgrade

# fix bootable flag
parted -s /dev/vda set 1 boot on

# tmp tmp
mkdir /tmp/tmp
cd /tmp/tmp

# ugh cloud-init 0.6.3 is no bueno for configdrive
bzr branch lp:cloud-init
cd cloud-init
python setup.py build
python setup.py install --init-system upstart

# cloud-init kludges
addgroup --system --quiet netdev
echo -n > /etc/udev/rules.d/70-persistent-net.rules
echo -n > /lib/udev/rules.d/75-persistent-net-generator.rules

# our cloud-init config
cat > /etc/cloud/cloud.cfg.d/10_rackspace.cfg <<'EOF'
datasource_list: [ ConfigDrive, None ]
users: root
manage_resolv_conf: True
disable_root: False
ssh_pwauth: True
ssh_deletekeys: False
resize_rootfs: True
EOF

# 12.04 cloud-init config
#cat > /etc/cloud/cloud.cfg.d/10_rackspace.cfg <<'EOF'
#datasource_list: [ ConfigDrive ]
#user: root
#manage_resolv_conf: True
#disable_root: False
#ssh_pwauth: True
#ssh_deletekeys: True
#resize_rootfs: True
#EOF

# minimal network conf that doesnt dhcp
# causes boot delay if left out, no bueno
cat > /etc/network/interfaces <<'EOF'
auto lo
iface lo inet loopback
auto eth0
iface eth0 inet dhcp
EOF

# stage a clean hosts file
cat > /etc/hosts <<'EOF'
# The following lines are desirable for IPv6 capable hosts
::1     ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6-mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
127.0.0.1 localhost
EOF

# set some stuff
echo 'net.ipv4.conf.eth0.arp_notify = 1' >> /etc/sysctl.conf
echo 'vm.swappiness = 0' >> /etc/sysctl.conf

# set ssh keys to regenerate at first boot only
#cat > /etc/rc.local <<'EOF'
#ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key -N ''
#ssh-keygen -t dsa -f /etc/ssh/ssh_host_dsa_key -N ''
#ssh-keygen -t ecdsa -f /etc/ssh/ssh_host_ecdsa_key -N ''
#echo > /etc/rc.local
#EOF

# keep grub2 from using UUIDs and regenerate config
sed -i 's/#GRUB_DISABLE_LINUX_UUID.*/GRUB_DISABLE_LINUX_UUID="true"/g' /etc/default/grub
#sed -i 's/#GRUB_TERMINAL=console/GRUB_TERMINAL=console/g' /etc/default/grub
#sed -i 's/GRUB_CMDLINE_LINUX_DEFAULT.*/GRUB_CMDLINE_LINUX_DEFAULT="console=ttyS0,115200n8 cgroup_enable=memory swapaccount=1"/g' /etc/default/grub
#echo 'GRUB_SERIAL_COMMAND="serial --unit=0 --speed=115200n8 --word=8 --parity=no --stop=1"' >> /etc/default/grub
#sed -i '/splashimage/d' /etc/default/grub
update-grub

#rm /etc/init/console.conf

# setup a usable console
#cat > /etc/init/ttyS0.conf <<'EOF'
# ttyS1 - getty
#
# This service maintains a getty on ttyS0 from the point the system is
# started until it is shut down again.
#
#start on stopped rc RUNLEVEL=[2345]
#stop on runlevel [!2345]
#
#respawn
#exec /sbin/getty -L 115200 ttyS0 xterm
#EOF

update-rc.d defaults spice-vdagentd
#echo 'blacklist bochs-drm' >> /etc/modprobe.d/blacklist.conf

pip install heat-cfntools

# log packages
wget http://KICK_HOST/kickstarts/package_postback.sh
bash package_postback.sh Ubuntu_12.04_KVM

# clean up
passwd -d root
passwd -l root
apt-get -y clean
apt-get -y autoremove
sed -i '/.*cdrom.*/d' /etc/apt/sources.list
rm -f /etc/ssh/ssh_host_*
rm -f /var/cache/apt/archives/*.deb
rm -f /var/cache/apt/*cache.bin
rm -f /var/lib/apt/lists/*_Packages
#rm -f /etc/resolv.conf
rm -f /root/.bash_history
rm -f /root/.nano_history
rm -f /root/.lesshst
rm -f /root/.ssh/known_hosts
rm -rf /tmp/tmp
for k in $(find /var/log -type f); do echo > $k; done
for k in $(find /tmp -type f); do rm -f $k; done
for k in $(find /root -type f \( ! -iname ".*" \)); do rm -f $k; done
