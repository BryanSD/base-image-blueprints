# some bits borrowed verbatim from here
# https://git.fedorahosted.org/cgit/cloud-kickstarts.git/tree/generic
# thanks Fedora!

# Install, not upgrade
install
cmdline

# Install from a friendly mirror and add updates
url --url=http://dl.fedoraproject.org/pub/fedora/linux/releases/21/Server/x86_64/os/
repo --name=fedora --baseurl=http://dl.fedoraproject.org/pub/fedora/linux/releases/21/Everything/x86_64/os/

# Language and keyboard setup
lang en_US.UTF-8
keyboard us

# Configure DHCP networking w/optional IPv6, firewall on
network --bootproto=dhcp --device=link --activate --onboot=on
#network --onboot yes --device eth0 --bootproto dhcp --ipv6 auto --hostname localhost
firewall --service=ssh

# Set timezone
timezone --utc Etc/UTC

# Authentication
rootpw --lock
authconfig --enableshadow --passalgo=sha512

# SELinux
selinux --permissive

# Services running at boot
services --enabled=network,sshd,rsyslog,cloud-init,cloud-init-local,cloud-config,cloud-final
#services --enabled network,sshd,rc-local,NetworkManager-wait-online
services --disabled sendmail

# Disable anything graphical
skipx
#text

# Setup the disk
zerombr
clearpart --all --initlabel
part / --fstype=ext4 --grow --size=1024 --asprimary
#bootloader --timeout=1 --append="console=ttyS0,115200n8 console=tty0 net.ifnames=0 biosdevname=0" --extlinux
# extlinux bootloader is done manually in %post so that future kernel updates write the conf correctly
# using the extlinux option from anaconda with that custom in %post breaks booting
bootloader --disabled

# Shutdown when the kickstart is done
shutdown --eject

# Minimal package set
%packages --excludedocs --nobase
@core
kernel
cloud-init
cloud-utils
dracut-nohostonly
dracut-norescue
syslinux-extlinux 
firewalld
rsync
tar
wget
which
xorg-x11-drv-qxl
xorg-x11-server-utils
spice-vdagent
qemu-guest-agent
qemu-kvm
heat-cfntools
-biosdevname
-plymouth
-NetworkManager
-iprutils

%end

%post --erroronfail

# update all
yum -y update
yum -y upgrade 

# setup systemd to boot to the right runlevel
rm -f /etc/systemd/system/default.target
ln -s /lib/systemd/system/multi-user.target /etc/systemd/system/default.target

# If you want to remove rsyslog and just use journald, remove this!
rmdir /var/log/journal/ 

# this is installed by default but we don't need it in virt
yum -C -y remove linux-firmware

# although we want console output going to the serial console, we don't
# actually have the opportunity to login there. FIX.
# we don't really need to auto-spawn _any_ gettys.
sed -i '/^#NAutoVTs=.*/ a\
NAutoVTs=0' /etc/systemd/logind.conf

# initscripts don't like this file to be missing.
cat > /etc/sysconfig/network << EOF
NETWORKING=yes
NOZEROCONF=yes
EOF

# For cloud images, 'eth0' _is_ the predictable device name, since
# we don't want to be tied to specific virtual (!) hardware
rm -f /etc/udev/rules.d/70*
ln -s /dev/null /etc/udev/rules.d/80-net-name-slot.rules

# simple eth0 config, again not hard-coded to the build hardware
cat > /etc/sysconfig/network-scripts/ifcfg-eth0 << EOF
DEVICE="eth0"
BOOTPROTO="dhcp"
ONBOOT="yes"
TYPE="Ethernet"
EOF

# generic localhost names
cat > /etc/hosts << EOF
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
EOF

# Because memory is scarce resource in most cloud/virt environments,
# and because this impedes forensics, we are differing from the Fedora
# default of having /tmp on tmpfs.
systemctl mask tmp.mount

# set some stuff
echo 'net.ipv4.conf.eth0.arp_notify = 1' >> /etc/sysctl.conf
echo 'vm.swappiness = 0' >> /etc/sysctl.conf

# make double sure grub/extlinux are happy
# remove any grub entries and
# manually create extlinux file
dd if=/usr/share/syslinux/mbr.bin of=/dev/vda bs=512 count=1
extlinux --install /boot
rm -rf /boot/grub*
version=$(rpm -q kernel --queryformat='%{VERSION}-%{RELEASE}.%{ARCH}\n' | tail -n 1)
cat > /boot/extlinux.conf <<EOF
TIMEOUT 1
default linux

LABEL linux
      KERNEL /boot/vmlinuz-$version
      APPEND root=/dev/xvda1 console=ttyS0,115200n8 console=tty0 net.ifnames=0 biosdevname=0
      initrd /boot/initramfs-$version.img
EOF
rm -f /etc/extlinux.conf
ln -s /boot/extlinux.conf /etc/extlinux.conf

# our cloud-init config
cat > /etc/cloud/cloud.cfg.d/10_rackspace.cfg <<'EOF'
datasource_list: [ ConfigDrive, None ]
manage-resolv-conf: false
disable_root: False
ssh_pwauth: True
ssh_deletekeys: False
resize_rootfs: noblock
cloud_config_modules:
 - disk_setup
 - mounts
 - ssh-import-id
 - locale
 - set-passwords
 - package-update-upgrade-install
 - yum-add-repo
 - timezone
 - puppet
 - chef
 - salt-minion
 - mcollective
 - disable-ec2-metadata
 - runcmd
 - byobu
cloud_init_modules:
 - migrator
 - bootcmd
 - write-files
 - growpart
 - resizefs
 - set_hostname
 - update_hostname
 - update_etc_hosts
 - rsyslog
 - users-groups
 - ssh
EOF

# a simple fstab
cat > /etc/fstab <<'EOF'
/dev/vda1		/                       ext4     defaults,noatime 1 1
EOF

# make sure firstboot doesn't start
echo "RUN_FIRSTBOOT=NO" > /etc/sysconfig/firstboot

# cloud-init fixes
sed -i 's/WARNING/DEBUG/g' /etc/cloud/cloud.cfg.d/05_logging.cfg
cat > /usr/lib/systemd/system/cloud-init-local.service <<'EOF'
[Unit]
Description=Initial cloud-init job (pre-networking)
Wants=local-fs.target
After=local-fs.target
Before=network.target
WantedBy=multi-user.target network.target

[Service]
Type=oneshot
ExecStart=/usr/bin/cloud-init init --local
RemainAfterExit=yes
TimeoutSec=0

# Output needs to appear in instance console output
StandardOutput=journal+console

[Install]
WantedBy=multi-user.target
EOF

# log packages
wget http://KICK_HOST/kickstarts/package_postback.sh
bash package_postback.sh Fedora_21_KVM

# set rackspace mirrors
#sed -i 's%download.fedoraproject.org/pub%mirror.rackspace.com%g' /etc/yum.repos.d/fedora.repo
#sed -i 's%download.fedoraproject.org/pub%mirror.rackspace.com%g' /etc/yum.repos.d/fedora-updates.repo
#sed -i 's%download.fedoraproject.org/pub%mirror.rackspace.com%g' /etc/yum.repos.d/fedora-updates-testing.repo
#sed -i '/mirrorlist/s/^/#/' /etc/yum.repos.d/fedora.repo
#sed -i '/mirrorlist/s/^/#/' /etc/yum.repos.d/fedora-updates.repo
#sed -i '/mirrorlist/s/^/#/' /etc/yum.repos.d/fedora-updates-testing.repo
#sed -i 's/#baseurl/baseurl/g' /etc/yum.repos.d/fedora.repo
#sed -i 's/#baseurl/baseurl/g' /etc/yum.repos.d/fedora-updates.repo
#sed -i 's/#baseurl/baseurl/g' /etc/yum.repos.d/fedora-updates-testing.repo

# clean up
yum clean all
truncate -c -s 0 /var/log/yum.log
echo "" > /etc/machine-id
rm -f /etc/ssh/ssh_host_*
rm -f /etc/resolv.conf
rm -f /root/.bash_history
rm -f /root/.nano_history
rm -f /root/.lesshst
rm -f /root/.ssh/known_hosts
rm -rf /tmp/tmp
#rm -f /etc/sysconfig/network-scripts/*
for k in $(find /var/log -type f); do echo > $k; done
for k in $(find /tmp -type f); do rm -f $k; done
for k in $(find /root -type f \( ! -iname ".*" \)); do rm -f $k; done

%end
