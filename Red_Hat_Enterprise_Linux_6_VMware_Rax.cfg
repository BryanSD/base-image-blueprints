%pre --log=/tmp/log/installer.log --interpreter=/bin/sh
dd if=/dev/zero of=/dev/sda bs=512 count=1
parted -s /dev/sda mklabel msdos
parted -s /dev/sda -a cylinder mkpart primary ext3 0MB 2048MB
parted -s /dev/sda -a cylinder mkpart primary linux-swap 2048MB 4096MB
parted -s /dev/sda -a cylinder mkpart primary ext3 4096MB 100%
partprobe
%end

# Install, not upgrade
install
cmdline

# Install from a friendly mirror and add updates
#url --url=http://intra.mirror.rackspace.com/kickstart/rhel-x86_64-server-6/
cdrom
repo --name=base --baseurl=http://intra.mirror.rackspace.com/kickstart/rhel-x86_64-server-6/
repo --name=common --baseurl=http://INTERNAL_HOST/centos-repos/rackspace-rhel-x86_64-server-6-common/
repo --name=optional --baseurl=http://INTERNAL_HOST/centos-repos/rhel-x86_64-server-optional-6/
repo --name=suse-tools --baseurl=http://INTERNAL_HOST/centos-repos/centos6-x86_64-suse-tools/
repo --name=epel --baseurl=http://mirror.rackspace.com/epel/6/x86_64/

# Language and keyboard setup
lang en_US.UTF-8
keyboard us

# Configure DHCP networking w/optional IPv6, firewall on
network --onboot yes --device eth0 --bootproto dhcp --ipv6 auto --hostname localhost
#firewall --service=ssh
firewall --disable

# Set timezone
timezone --utc Etc/UTC

# Authentication
# password expires after first login
rootpw --plaintext rackspace
authconfig --enableshadow --passalgo=sha512

# SELinux
selinux --disabled

# Services running at boot
services --enabled network,sshd
services --disabled sendmail

# Disable anything graphical
skipx
#text

# Setup the disk
#zerombr
#clearpart --all --initlabel
#part / --fstype=ext4 --grow --size=1024 --asprimary
part /tmp --onpart=/dev/sda1 --fstype=ext3
part swap --onpart=/dev/sda2
part / --onpart=/dev/sda3 --asprimary --fstype=ext3
bootloader --timeout=1 
#--append="console=hvc0"

# Shutdown when the kickstart is done
#shutdown
poweroff

# Minimal package set
%packages
@core
@base
epel-release
kernel
rsync
tar
wget
openssh-clients
python-simplejson
python-pip
cloud-init
cloud-utils
cloud-utils-growpart
dracut-modules-growroot
parted
curl
ntp
net-snmp
net-snmp-utils
sysstat
bind-utils
bc
perl-Crypt-SSLeay
perl-TermReadKey
perl-libwww-perl
python-cement
# 
autoconf
automake
bison
boost
compat-libstdc++-33
device-mapper
device-mapper-event
device-mapper-multipath
elfutils
gcc
kernel-devel
kernel-headers
m4
mcelog
mutt
nc
net-snmp
net-snmp-utils
net-tools
nmap
ntp
OpenIPMI
OpenIPMI-libs
osad
perl-Crypt-SSLeay
perl-libwww-perl
postfix
python-hwdata
rhn-client-tools
rhncfg
rhncfg-actions
rhncfg-client
rpm-build
#rs-release
rs-sysmon
#rs-tools
screen
sharutils
smartmontools
strace

%end

%post --nochroot
cat >> /etc/resolv.conf <<'EOF'
nameserver 8.8.8.8
EOF
cp /etc/resolv.conf /mnt/sysimage/etc/resolv.conf
%end

%post --log=/var/log/post_install.log
exec < /dev/tty3 > /dev/tty3
chvt 3
echo
echo "################################"
echo "# Running Post Configuration   #"
echo "################################"
(
# this is installed by default but we don't need it in virt
yum -C -y remove linux-firmware

# Non-firewalld-firewall
#cat <<EOF > /etc/sysconfig/iptables
# Simple static firewall loaded by iptables.service. Replace
# this with your own custom rules, run lokkit, or switch to 
# shorewall or firewalld as your needs dictate.
#*filter
#:INPUT ACCEPT [0:0]
#:FORWARD ACCEPT [0:0]
#:OUTPUT ACCEPT [0:0]
#-A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
#-A INPUT -p icmp -j ACCEPT
#-A INPUT -i lo -j ACCEPT
#-A INPUT -m conntrack --ctstate NEW -m tcp -p tcp --dport 22 -j ACCEPT
#-A INPUT -j REJECT --reject-with icmp-host-prohibited
#-A FORWARD -j REJECT --reject-with icmp-host-prohibited
#COMMIT
#EOF

# although we want console output going to the serial console, we don't
# actually have the opportunity to login there. FIX.
# we don't really need to auto-spawn _any_ gettys.
sed -i '/^#NAutoVTs=.*/ a\
NAutoVTs=0' /etc/systemd/logind.conf

# initscripts don't like this file to be missing.
cat > /etc/sysconfig/network << EOF
NETWORKING=yes
NOZEROCONF=yes
EOF

# For cloud images, 'eth0' _is_ the predictable device name, since
# we don't want to be tied to specific virtual (!) hardware
echo -n > /etc/udev/rules.d/70-persistent-net.rules
echo -n > /lib/udev/rules.d/75-persistent-net-generator.rules
ln -s /dev/null /etc/udev/rules.d/80-net-name-slot.rules

# simple eth0 config, again not hard-coded to the build hardware
cat > /etc/sysconfig/network-scripts/ifcfg-eth0 << EOF
DEVICE="eth0"
BOOTPROTO="static"
ONBOOT="yes"
TYPE="Ethernet"
EOF

# generic localhost names
cat > /etc/hosts << EOF
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
EOF

# tmp tmp
mkdir /tmp/tmp
cd /tmp/tmp

# set some stuff
echo 'net.ipv4.conf.eth0.arp_notify = 1' >> /etc/sysctl.conf
echo 'vm.swappiness = 0' >> /etc/sysctl.conf

# set rackspace mirrors
sed -i 's%#baseurl.*%baseurl=http://mirror.rackspace.com/epel/6/x86_64/%g' /etc/yum.repos.d/epel.repo
sed -i '/mirrorlist/s/^/#/' /etc/yum.repos.d/epel.repo
sed -i '/baseurl/s/# *//' /etc/yum.repos.d/epel.repo

cat >> /etc/yum.repos.d/rhel-source.repo <<'EOF'
[rhel-source]
name=Red Hat Enterprise Linux $releasever - $basearch - Source
baseurl=http://intra.mirror.rackspace.com/kickstart/rhel-x86_64-server-6/
enabled=1
gpgcheck=0
EOF

# our cloud-init config
cat > /etc/cloud/cloud.cfg.d/10_rackspace.cfg <<'EOF'
datasource_list: [ NoCloud, NoCloudNet, None ]
disable_root: False
ssh_pwauth: True
ssh_deletekeys: False
resize_rootfs: noblock
growpart:
  mode: auto
  devices: ['/']
system_info:
  distro: rhel
EOF

# use a static fstab with no uuids
cat > /etc/fstab <<'EOF'
#
# /etc/fstab
#
# Accessible filesystems, by reference, are maintained under '/dev/disk'
# See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info
#
/dev/sda1               /tmp                    ext3    defaults        1 2
/dev/sda2               swap                    swap    defaults        0 0
/dev/sda3               /                       ext3    defaults        1 1
tmpfs                   /dev/shm                tmpfs   defaults        0 0
devpts                  /dev/pts                devpts  gid=5,mode=620  0 0
sysfs                   /sys                    sysfs   defaults        0 0
proc                    /proc                   proc    defaults        0 0
EOF

# make necessary paths
mkdir -p /root/.rackspace/mngd_storage
mkdir -p /root/.rackspace/mngd_backup
#mkdir -p /root/.rackspace/sophos

# storage
wget --directory-prefix=/root/.rackspace/mngd_storage http://INTERNAL_HOST/vendors/storage/mngd_storage-gold.tgz

# nimbus
wget --directory-prefix=/root/.rackspace http://INTERNAL_HOST/vendors/rackspace-cust/enterprise/nimbusinstallers-20130508.tar.gz
wget --directory-prefix=/root/.rackspace http://INTERNAL_HOST/vendors/rackspace-cust/enterprise/managed-nimbus-installer.tar.gz

# sophos
#wget --directory-prefix=/root/.rackspace/sophos http://INTERNAL_HOST/vendors/sophos/sophos.tar.gz

# managed backup
#wget --directory-prefix=/root/.rackspace/mngd_backup http://INTERNAL_HOST/vendors/commvault/commvault8install.tar.gz
#wget --directory-prefix=/root/.rackspace/mngd_backup http://INTERNAL_HOST/vendors/commvault/commvault9install.tar.gz
#wget --directory-prefix=/root/.rackspace/mngd_backup http://INTERNAL_HOST/vendors/commvault/RHEL5/cvinstall.egg
wget --directory-prefix=/etc/profile.d http://INTERNAL_HOST/vendors/commvault/commvault.sh
wget --directory-prefix=/root/.rackspace/mngd_backup http://INTERNAL_HOST/vendors/commvault/RHEL6/cvinstall.egg
wget --directory-prefix=/root/.rackspace/mngd_backup http://INTERNAL_HOST/vendors/commvault/CommVaultInstallerV10.tar.gz
cd /root/.rackspace/mngd_backup
tar xzvf *.tar.gz
cd /tmp/tmp

# vmtools
wget --directory-prefix=/tmp/tmp http://packages.vmware.com/tools/keys/VMWARE-PACKAGING-GPG-DSA-KEY.pub
wget --directory-prefix=/tmp/tmp http://packages.vmware.com/tools/keys/VMWARE-PACKAGING-GPG-RSA-KEY.pub
wget --directory-prefix=/tmp/tmp http://packages.vmware.com/tools/esx/5.5/repos/vmware-tools-repo-RHEL6-9.4.0-1.el6.x86_64.rpm
rpm --import /tmp/tmp/VMWARE-PACKAGING-GPG-RSA-KEY.pub
rpm --import /tmp/tmp/VMWARE-PACKAGING-GPG-DSA-KEY.pub
rpm -Uvh /tmp/tmp/vmware-tools*
yum -y install vmware-tools-esx-kmods
yum -y install vmware-tools-esx

# package need for our RHN registration to work
wget http://KICK_HOST/rs-tools/rhn-org-trusted-ssl-cert-1.0-1.noarch.rpm
rpm -Uvh rhn-org-trusted-ssl-cert*

# rs-rhntools
wget --directory-prefix=/tmp/tmp http://KICK_HOST/rs-tools/rs-tools-0.1.18-1.el6.noarch.rpm
wget --directory-prefix=/tmp/tmp http://KICK_HOST/rs-tools/rs-tools-rhn-0.1.18-1.el6.noarch.rpm
wget --directory-prefix=/tmp/tmp http://KICK_HOST/rs-tools/rs-release-0.1-5.rs.el6.noarch.rpm
rpm -Uvh /tmp/tmp/rs*.rpm

# dirty hack for NoCloud datasource fail
sed -i 's%cdrom_list = util.find_devs_with(path="/dev/sr1")%cdrom_list = util.find_devs_with(path="/dev/cdrom")%g' /usr/lib/python2.6/site-packages/cloudinit/sources/DataSourceNoCloud.py

# update all
yum -y update

# make sure repos are empty for rhel
for k in $(find /etc/yum.repos.d -type f\( ! -name "*epel*" \)); do rm -f $k; done
echo > /etc/yum.repos.d/rhel-source.repo

# force grub to use generic disk labels, bootloader above does not do this
sed -i 's%root=.*%root=/dev/sda3%g' /boot/grub/grub.conf

# no soup for you
cat >> /etc/yum.conf <<'EOF'
exclude=kernel*
EOF

# force root pw change
chage -d 0 root

# generic localhost names
cat > /etc/hosts << EOF
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
EOF

# log packages
wget http://KICK_HOST/kickstarts/package_postback.sh
bash package_postback.sh Red_Hat_Enterprise_Linux_6_VMware_Rax

# separate tmp file
#rm -rf /tmp/*
#dd if=/dev/zero of=/etc/TMPFILE.img bs=1 count=1 seek=2147483648
#yes | mkfs.ext4 /etc/TMPFILE.img
#mount -o loop,rw /etc/TMPFILE.img /mnt
#chmod 1777 /mnt
#umount /mnt

# clean up
yum clean all
truncate -c -s 0 /var/log/yum.log
rm -f /root/anaconda-ks.cfg
rm -f /etc/ssh/ssh_host_*
rm -f /etc/resolv.conf
rm -f /root/.bash_history
rm -f /root/.nano_history
rm -f /root/.lesshst
rm -f /root/.ssh/known_hosts
rm -rf /tmp/tmp
for k in $(find /var/log -type f); do echo > $k; done
for k in $(find /tmp -type f); do rm -f $k; done
rm -f /root/*log
#for k in $(find /root -type f \( ! -iname ".*" \)); do rm -f $k; done
) 2>&1 | /usr/bin/tee /var/log/post_install_chvt.log
chvt 1
%end
